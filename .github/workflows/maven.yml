# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven
on: [push, pull_request]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
              java-version: '11'
              distribution: 'adopt'
      - name: Hello world
        run: echo Hello world $FIRST_NAME $middle_name $Last_Name!
        env:
          FIRST_NAME: "Mona"
          middle_name: "The"
          password: "Octocat"
      - name: Setup JFrog CLI
        uses: jfrog/setup-jfrog-cli@v2.0.0
        with:
          version: 2.34.6
      - name: Setup JFrog CLI
        run: |
          jf config add hts2 --url=https://hts2.jfrog.io --user=${{ secrets.ARTIFACTORY_USER }} --password=${{ secrets.ARTIFACTORY_PASS }} --interactive=false
          jf c show
          jf rt ping
          jf mvn-config --global --server-id-resolve=hts2 --repo-resolve-releases=ghactions1-libs-release --repo-resolve-snapshots=ghactions1-libs-snapshot --server-id-deploy=hts2 --repo-deploy-releases=ghactions1-libs-release-local --repo-deploy-snapshots=ghactions1-libs-snapshot-local
          jf mvn clean install -f maven-example/pom.xml -U
          jf rt bce
          jf rt bag
          jf rt bp













































          
